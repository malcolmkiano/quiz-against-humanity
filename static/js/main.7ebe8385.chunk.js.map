{"version":3,"sources":["Context/DataContext.js","Modules/animate.js","Modules/shuffle.js","Components/Header/Header.js","Components/Button/Button.js","Components/Footer/Footer.js","Views/StartScreen/SS.js","Components/Loader/Loader.js","Components/Card/Card.js","Views/QuizScreen/QS.js","Modules/messages.js","Views/Overlay/OV.js","Views/ResultScreen/RS.js","App/App.js","serviceWorker.js","index.js"],"names":["DataContext","React","createContext","Component","props","state","shouldRender","isVisible","oldProps","this","setState","setTimeout","array","Array","isArray","array_copy","i","length","j","Math","floor","random","Header","className","style","Button","autoFocus","onClick","type","children","Footer","onAnimationEnd","config","alignment","enabled","networks","radius","spacing","target","rel","href","LoaderView","animate","hidden","onDismount","animations","show","startingOver","container","animation","delay","header","content","footer","StartScreen","handleStart","onStart","animationDelay","isLoading","Card","text","Tag","ignoreContainer","main","QuizScreen","q","context","questions","refs","list","scrollLeft","demoCompleted","position","reverse","setInterval","scrollWidth","clearInterval","onDemoCompleted","score","current","question","ref","answers","map","answer","key","onAnswer","contextType","data","remark","correct","wrong","result","perfect","good","bad","terrible","keyword","total","node","index","Overlay","handleClose","onClose","questionNumber","selectedAnswer","isCorrect","correctAnswer","msg","messages","parts","split","body","toLowerCase","selection","ResultScreen","handlePlayAgain","onPlayAgain","SS","QS","OV","RS","App","quizStarted","handleAnswer","handleDemoCompleted","localStorage","setItem","shuffle","getItem","loading","appVersion","contextValue","Provider","value","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7ebe8385.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst DataContext = React.createContext();\r\n\r\nexport default DataContext;","import React from 'react';\r\n\r\n/**\r\n * wraps components and delays unmounting to allow entry/exit animations\r\n * @param {Component} Component component to animate\r\n */\r\nexport default function (Component) {\r\n  return class extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        shouldRender: this.props.isVisible\r\n      }\r\n    }\r\n\r\n    // delay the dismount by 1 second after component should be hidden\r\n    componentDidUpdate(oldProps) {\r\n      if (!oldProps.isVisible && this.props.isVisible){\r\n        this.setState({ shouldRender: true });\r\n      } else if (oldProps.isVisible && !this.props.isVisible){\r\n        setTimeout(\r\n          () => this.setState({ shouldRender: false }),\r\n          1000\r\n        );\r\n      }\r\n    }\r\n\r\n    // conditionally render child component if state.shouldRender is true\r\n    render() {\r\n      return this.state.shouldRender ? <Component {...this.props} /> : null;\r\n    }\r\n  };\r\n};","/**\r\n * returns a copy of an array with its contents shuffled\r\n * @param {Array} array the array to be shuffled\r\n */\r\nexport default function (array) {\r\n\r\n  if (!Array.isArray(array)) return false;\r\n\r\n  let array_copy = [...array];\r\n  for (let i = array_copy.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array_copy[i], array_copy[j]] = [array_copy[j], array_copy[i]];\r\n  }\r\n  return array_copy;\r\n}","import React from 'react';\r\nimport './Header.sass';\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <header\r\n        className={this.props.className}\r\n        style={this.props.style} >\r\n        <h1>\r\n          <span>Quiz</span>\r\n          <span>Against</span>\r\n          <span>Humanity.</span>\r\n        </h1>\r\n        <p className=\"subtitle\">\r\n          <span>A trivia game</span>\r\n          <span>for weird people.</span>\r\n        </p>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Button.sass';\r\n\r\nclass Button extends React.Component {\r\n  render() {\r\n    return (\r\n      <button autoFocus onClick={this.props.onClick} className={`btn ${this.props.type}`}>\r\n        {this.props.children}\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport './Footer.sass';\r\n\r\nimport {InlineShareButtons} from 'sharethis-reactjs';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer\r\n        className={this.props.className}\r\n        style={this.props.style}\r\n        onAnimationEnd={this.props.onAnimationEnd}>\r\n        <InlineShareButtons\r\n          config={{\r\n            alignment: 'center',\r\n            enabled: true,\r\n            networks: [\r\n              'facebook',\r\n              'twitter',\r\n              'pinterest',\r\n              'email',\r\n              'sms'\r\n            ],\r\n            radius: 50,\r\n            spacing: 8\r\n          }} />\r\n        <p>\r\n          Designed & developed by <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://malcolmkiano.com\">Malcolm Kiano</a>.\r\n        </p>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './SS.sass';\r\n\r\nimport Header from '../../Components/Header/Header';\r\nimport Button from '../../Components/Button/Button';\r\nimport Footer from '../../Components/Footer/Footer';\r\nimport Loader from '../../Components/Loader/Loader';\r\n\r\nimport animate from '../../Modules/animate';\r\n\r\nconst LoaderView = animate(Loader);\r\n\r\n/**\r\n * creates an object with corresponding entry/exit animations\r\n * @param {Boolean} show true/false for entry/exit animations\r\n * @param {Boolean} startingOver whether or not to skip container animations\r\n */\r\nfunction animations(show, startingOver=false) {\r\n  return {\r\n    container: {\r\n      animation: show ? '' : 'fadeOut',\r\n      delay: show ? 0 : 1\r\n    },\r\n    \r\n    header: {\r\n      animation: !startingOver ? show ? 'bounceInDown' : 'bounceOutUp' : show ? '' : 'bounceOutUp',\r\n    },\r\n\r\n    content: {\r\n      animation: show ? 'fadeIn' : 'fadeOut',\r\n      delay: show ? 1 : 0\r\n    },\r\n\r\n    footer : {\r\n      animation: !startingOver ? show ? 'fadeIn' : 'fadeOut' : show ? '' : 'fadeOut',\r\n      delay: !startingOver ? show ? 1 : 0 : 0\r\n    }\r\n  }\r\n}\r\n\r\nclass StartScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...animations(props.isVisible, props.startingOver)\r\n    }\r\n  }\r\n\r\n  // run animations before dismount\r\n  handleStart = () => {\r\n    if (this.props.onStart()) {\r\n      this.setState({\r\n        ...animations(false)\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {container, header, content, footer} = this.state;\r\n    return (\r\n      <section\r\n        className={`intro animated ${container.animation}`}\r\n        style={{animationDelay: `${container.delay}s`}}>\r\n        <div className=\"wrapper\">\r\n          <Header\r\n            className={`animated ${header.animation}`} />\r\n          \r\n          <article \r\n            className={`animated ${content.animation}`}\r\n            style={{animationDelay: `${content.delay}s`}}>\r\n            <p>\r\n              Test your knowledge in a quiz on facts that no <em>normal people</em> would know about.\r\n            </p>\r\n            <Button onClick={this.handleStart}>Start Game!</Button>\r\n          </article>\r\n\r\n          <Footer\r\n            className={`animated ${footer.animation}`}\r\n            style={{animationDelay: `${footer.delay}s`}} />\r\n\r\n          <LoaderView\r\n            isVisible={this.props.isLoading}/>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StartScreen;","import React from 'react';\r\nimport './Loader.sass'\r\n\r\nclass Loader extends React.Component {\r\n  render() {\r\n\r\n    // conditional class if loading is complete\r\n    // (isVisible would equal to true)\r\n    const hidden = !this.props.isVisible ? 'hidden' : '';\r\n\r\n    return (\r\n      <div\r\n        className={`loader animated ${hidden}`}\r\n        onAnimationEnd={this.props.onDismount}></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport './Card.sass';\r\n\r\nclass Card extends React.Component {\r\n  render() {\r\n\r\n    // grab necessary values from props\r\n    const {animation, delay, text, type, onClick} = this.props;\r\n\r\n    // uses a <p> tag if type is question\r\n    // otherwise use an <li> tag\r\n    const Tag = type === 'question' ? 'p' : 'li';\r\n\r\n    return (\r\n      <Tag\r\n        className={`card animated ${animation} card-${type}`}\r\n        style={{animationDelay: `${delay}s`}}>\r\n        {type === 'question' ? (\r\n          <span>{text}</span>\r\n        ) : (\r\n          <button onClick={() => onClick(text)}><span>{text}</span></button>\r\n        )}\r\n      </Tag>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport './QS.sass';\r\nimport DataContext from '../../Context/DataContext';\r\n\r\nimport Card from '../../Components/Card/Card';\r\n\r\n/**\r\n * creates an object with corresponding entry/exit animations\r\n * @param {Boolean} show true/false for entry/exit animations\r\n * @param {Boolean} ignoreContainer whether or not to skip container animations\r\n */\r\nfunction animations(show, ignoreContainer=false) {\r\n  return {\r\n    container: {\r\n      animation: !ignoreContainer ? show ? 'fadeIn' : 'fadeOut' : '',\r\n      delay: 0.5\r\n    },\r\n    \r\n    main: {\r\n      animation: show ? 'bounceInUp' : 'bounceOutUp',\r\n      delay: !ignoreContainer ? show ? 1 : 0 : 0\r\n    },\r\n\r\n    content: {\r\n      animation: show ? 'fadeInUp' : 'fadeOut',\r\n      delay: !ignoreContainer ? show ? 1.2 : 0 : show ? 0.2 : 0\r\n    }\r\n  }\r\n}\r\n\r\nclass QuizScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      q: props.q,\r\n      ...animations(props.isVisible)\r\n    }\r\n  }\r\n\r\n  static contextType = DataContext;\r\n\r\n  // enables question switching animation, or\r\n  // unmounting the component\r\n  componentDidUpdate(props) {\r\n    if (this.props.q > props.q) {\r\n      this.setState({\r\n        ...animations(false, this.props.q < this.context.questions.length)\r\n      }, () => {\r\n        if (this.props.q < this.context.questions.length) {\r\n          setTimeout(() => {\r\n            this.setState({\r\n              ...animations(true, true),\r\n              q: this.props.q\r\n            }, () => this.refs.list.scrollLeft = 0)\r\n          }, 750);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // demonstrates scrolling on mobile devices\r\n  // (this won't do anything if on PC since there will not be any overflow)\r\n  componentDidMount() {\r\n    if (!this.context.demoCompleted) {\r\n      const list = this.refs.list;\r\n      let position = 0;\r\n      let interval = 10;\r\n      let reverse = false;\r\n      setTimeout(() => {\r\n        let animation = setInterval(() => {\r\n          list.scrollLeft = position;\r\n          if (reverse === false) {\r\n            if (position < list.scrollWidth) {\r\n              position += interval;\r\n            } else {\r\n              reverse = true;\r\n            }\r\n          } else {\r\n            if (position > 0) {\r\n              position -= interval;\r\n            } else {\r\n              position = 0;\r\n              clearInterval(animation);\r\n              this.context.onDemoCompleted();\r\n            }\r\n          }\r\n        }, 8);\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {container, main, content, q} = this.state;\r\n    const {questions, score} = this.context;\r\n    const current = questions[q] || questions[questions.length - 1];\r\n    let i = 0;\r\n    return (\r\n      <section\r\n        className={`quiz animated ${container.animation}`}\r\n        style={{animationDelay: `${container.delay}s`}}>\r\n        <div className=\"wrapper\">\r\n          <header>\r\n            <div className=\"info\">\r\n              <p>Question:</p>\r\n              <p className=\"number\">{q + 1}<span>/{questions.length}</span></p>\r\n            </div>\r\n            <div className=\"score\">\r\n              <p>Score:</p>\r\n              <p className=\"number\">{score}</p>\r\n            </div>\r\n          </header>\r\n          <article>\r\n            <Card\r\n              animation={main.animation}\r\n              type=\"question\"\r\n              delay={main.delay}\r\n              text={current.question} />\r\n\r\n            <ul ref=\"list\">\r\n              {\r\n                current.answers.map(answer => {\r\n                  i++;\r\n                  return (\r\n                    <Card\r\n                      key={i}\r\n                      animation={content.animation}\r\n                      type=\"answer\"\r\n                      delay={content.delay + (i * 0.15)}\r\n                      text={answer}\r\n                      onClick={this.context.onAnswer}/>\r\n                  );\r\n                })\r\n              }\r\n            </ul>\r\n          </article>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default QuizScreen;","const data = {\r\n  remark: {\r\n    correct: [ 'Good Job!', 'Go You!', 'Noice!', 'Sweeeet!', 'Epic!' ],\r\n    wrong: [ 'Wrong!', 'Nope!', 'Incorrect!', 'Wut?', 'Yeah, no.' ]\r\n  },\r\n\r\n  result: {\r\n    perfect: [\r\n      'You should be very proud of yourself. Nobody else is.',\r\n      'You must have been studying... weirdo.',\r\n      'Congratu-fricking-lations, nerd.',\r\n      'Maybe your parents will love you now.'\r\n    ],\r\n    good: [\r\n      'You could\\'ve done better... if you were smarter.',\r\n      'Now go out and celebrate your mediocrity. Or don\\'t. COVID-19.',\r\n      'You\\'ll receive your certificate in the mail in about 41 years.',\r\n      'Good job, you\\'re smarter than a cat.'\r\n    ],\r\n    bad: [\r\n      'We\\'re praying for your brain. We hope you find it someday.',\r\n      'What\\'s the opposite of high scores again?',\r\n      'You tried so hard, but you still suck.',\r\n      'That\\'s a \"yikes\" from us.'\r\n    ],\r\n    terrible: [\r\n      'People that actually live under rocks have got better scores.',\r\n      'That was a joke or a test run... right?',\r\n      'A new personal worst. Oh, wait.',\r\n      '...'\r\n    ]\r\n  }\r\n}\r\n\r\n/**\r\n * return a random remark based on correct/wrong answer or total score\r\n * @param {string} type type of result - 'remark' or 'result'\r\n */\r\nfunction random(type, ...rest) {\r\n  let keyword;\r\n\r\n  if (type === 'remark') {\r\n    let correct = rest[0];\r\n    keyword = correct ? 'correct' : 'wrong';\r\n    \r\n  } else {\r\n    let score = rest[0];\r\n    let questions = rest[1];\r\n    let total = score/questions;\r\n\r\n    keyword = total === 1 ? 'perfect' : total >= .7 ? 'good' : total > 0 ? 'bad' : 'terrible';\r\n  }\r\n\r\n  const node = data[type][keyword];\r\n  const index = Math.floor(Math.random() * node.length);\r\n\r\n  return node[index];\r\n}\r\n\r\nexport default { random, data };","import React from 'react';\r\nimport './OV.sass';\r\nimport DataContext from '../../Context/DataContext';\r\nimport messages from '../../Modules/messages';\r\n\r\nimport Button from '../../Components/Button/Button';\r\n\r\n/**\r\n * creates an object with corresponding entry/exit animations\r\n * @param {Boolean} show true/false for entry/exit animations\r\n */\r\nfunction animations(show){\r\n  return {\r\n    container: {\r\n      animation: show ? 'fadeIn' : 'fadeOut',\r\n    },\r\n\r\n    content: {\r\n      animation: show ? 'zoomIn' : 'zoomOut',\r\n    }\r\n  }\r\n}\r\n\r\nclass Overlay extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      ...animations(props.isVisible)\r\n    }\r\n  }\r\n\r\n  static contextType = DataContext;\r\n\r\n  // set output of overlay into state to prevent update on question change\r\n  componentDidMount() {\r\n    const {questions, questionNumber, selectedAnswer} = this.context;\r\n    const q = questions[questionNumber] || questions[questions.length - 1];\r\n    const correctAnswer = q.answers[q.correctAnswer];\r\n    const isCorrect = selectedAnswer === correctAnswer;\r\n\r\n    const msg = messages.random('remark', isCorrect);\r\n    this.setState({\r\n      remark: msg\r\n    });\r\n  }\r\n\r\n  // updates state if component should hide or not (to show animations before dismount)\r\n  componentDidUpdate(props) {\r\n    if (props.isVisible !== this.props.isVisible) {\r\n      const show = this.props.isVisible;\r\n      this.setState({ ...animations(show) }) ;\r\n    }\r\n  }\r\n\r\n  // animates out component before calling prop event handler\r\n  handleClose = () => {\r\n    this.setState({\r\n      ...animations(false)\r\n    }, this.props.onClose);\r\n  }\r\n\r\n  render() {\r\n    const {container, content} = this.state;\r\n    const {questions, questionNumber, selectedAnswer} = this.context;\r\n\r\n    // repetitive, under inspection\r\n    const q = questions[questionNumber] || questions[questions.length - 1];\r\n    const correctAnswer = q.answers[q.correctAnswer];\r\n    const isCorrect = selectedAnswer === correctAnswer;\r\n\r\n    const parts = q.question.split('_____');\r\n    const body = (\r\n      <>\r\n        {parts[0]}<span className=\"correct\">{correctAnswer.toLowerCase()}</span>{parts[1]}\r\n      </>\r\n    );\r\n    const selection = (\r\n      <>\r\n        <br/><br/>\r\n        You selected: <span className=\"wrong\">{selectedAnswer}</span>\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <div\r\n        className={`overlay animated ${container.animation}`}>\r\n        <article\r\n          className={`animated ${content.animation}`}>\r\n          <h2>{this.state.remark}</h2>\r\n          <p>\r\n            {body}\r\n            {!isCorrect ? selection : ''}\r\n          </p>\r\n          <Button type=\"btn-small btn-alt\" onClick={this.handleClose}>\r\n            {questionNumber < questions.length - 1 ? 'Next Question!' : 'See Results!'}\r\n          </Button>\r\n        </article>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Overlay;","import React from 'react';\r\nimport './RS.sass';\r\nimport DataContext from '../../Context/DataContext';\r\nimport messages from '../../Modules/messages';\r\n\r\nimport Header from '../../Components/Header/Header';\r\nimport Button from '../../Components/Button/Button';\r\nimport Footer from '../../Components/Footer/Footer';\r\n\r\n/**\r\n * creates an object with corresponding entry/exit animations\r\n * @param {Boolean} show true/false for entry/exit animations\r\n */\r\nfunction animations(show) {\r\n  return {\r\n    container: {\r\n      animation: show ? 'fadeIn' : 'nothing',\r\n      delay: show ? 0.75 : 1\r\n    },\r\n    \r\n    header: {\r\n      animation: show ? 'bounceInDown' : '',\r\n      delay: show ? 1 : 0\r\n    },\r\n\r\n    content: {\r\n      animation: show ? 'fadeIn' : 'fadeOut',\r\n      delay: show ? 2 : 0\r\n    },\r\n\r\n    footer: {\r\n      animation: show ? 'fadeIn' : '',\r\n      delay: show ? 2 : 0\r\n    }\r\n  }\r\n}\r\n\r\nclass ResultScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...animations(props.isVisible)\r\n    }\r\n  }\r\n\r\n  static contextType = DataContext;\r\n\r\n  // set result message in state to avoid any changes\r\n  componentDidMount() {\r\n    const msg = messages.random('result', this.context.score, this.context.questions.length);\r\n    this.setState({\r\n      result: msg\r\n    })\r\n  }\r\n\r\n  // run animations on click of Play Agin button\r\n  // before running prop event handler\r\n  handlePlayAgain = () => {\r\n    this.setState({\r\n      ...animations(false),\r\n    }, () => setTimeout(this.props.onPlayAgain, 500));\r\n  }\r\n\r\n  render() {\r\n    const {container, header, content, footer} = this.state;\r\n    \r\n    return (\r\n      <section\r\n        className={`results animated ${container.animation}`}\r\n        style={{animationDelay: `${container.delay}s`}} >\r\n\r\n        <div className=\"wrapper\">\r\n          <Header\r\n            className={`animated ${header.animation}`}\r\n            style={{animationDelay: `${header.delay}s`}} />\r\n          \r\n          <article \r\n            className={`animated ${content.animation}`}\r\n            style={{animationDelay: `${content.delay}s`}}>\r\n            <div>\r\n              <h2>Your Score</h2>\r\n              <p className=\"score\">\r\n                {this.context.score}<span>/{this.context.questions.length}</span>\r\n              </p>\r\n              <p className=\"description\">\r\n                {this.state.result}\r\n              </p>\r\n            </div>\r\n            <Button onClick={this.handlePlayAgain}>Play Again!</Button>\r\n          </article>\r\n\r\n          <Footer\r\n            className={`animated ${footer.animation}`}\r\n            style={{animationDelay: `${footer.delay}s`}} />\r\n          \r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ResultScreen;","import React from 'react';\r\nimport './App.sass';\r\nimport DataContext from '../Context/DataContext';\r\n\r\nimport animate from '../Modules/animate';\r\nimport shuffle from '../Modules/shuffle';\r\n\r\n// data is manually imported for now\r\nimport data from '../data.json';\r\n\r\n// views\r\nimport SS from '../Views/StartScreen/SS';\r\nimport QS from '../Views/QuizScreen/QS';\r\nimport OV from '../Views/Overlay/OV';\r\nimport RS from '../Views/ResultScreen/RS';\r\n\r\nconst StartScreen = animate(SS);\r\nconst QuizScreen = animate(QS);\r\nconst Overlay = animate(OV);\r\nconst ResultScreen = animate(RS);\r\n\r\nclass App extends React.Component {\r\n  constructor(){\r\n    super();\r\n\r\n    this.state = {\r\n      quizStarted: false,\r\n      questionNumber: 0,\r\n      selectedAnswer: null,\r\n      score: 0,\r\n\r\n      questions: shuffle(data),\r\n\r\n      demoCompleted: localStorage.getItem('demo') || false,\r\n      startingOver: false,\r\n      loading: true,\r\n      \r\n      appVersion: '1.0.1'\r\n    };\r\n  }\r\n\r\n  /** start the quiz if there are questions in the state */\r\n  handleStart = () => {\r\n    this.setState({ quizStarted: true });\r\n    return true;\r\n  }\r\n\r\n  /** checks submitted answers against correct answer and updates state */\r\n  handleAnswer = (answer) => {\r\n    const {questions, questionNumber, score} = this.state;\r\n    const q = questions[questionNumber];\r\n    let correctAnswer = q.answers[q.correctAnswer];\r\n\r\n    this.setState({ selectedAnswer: answer });\r\n    \r\n    if (answer === correctAnswer) {\r\n      this.setState({\r\n        score: score + 1\r\n      })\r\n    }\r\n  }\r\n\r\n  /** runs when scroll demonstration is completed to prevent re-showing */\r\n  handleDemoCompleted = () => {\r\n    this.setState({ demoCompleted: true }, () => {\r\n      localStorage.setItem('demo', true);\r\n    })\r\n  }\r\n\r\n  /** closes overlay component and moves to next question */\r\n  handleClose = () => {\r\n    const {questionNumber} = this.state;\r\n    this.setState({\r\n      selectedAnswer: null,\r\n      questionNumber: questionNumber + 1\r\n    });\r\n  }\r\n\r\n  /** resets state values to restart quiz */\r\n  handlePlayAgain = () => {\r\n    this.setState({\r\n      quizStarted: false,\r\n      questionNumber: 0,\r\n      selectedAnswer: null,\r\n      score: 0,\r\n\r\n      questions: shuffle(data),\r\n\r\n      startingOver: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    // set up values and event handlers for context provider\r\n    const contextValue = {\r\n      ...this.state,\r\n      onAnswer: this.handleAnswer,\r\n      onDemoCompleted: this.handleDemoCompleted\r\n    };\r\n\r\n    // grab necessary values from state\r\n    const {quizStarted, questionNumber, questions, selectedAnswer, startingOver, loading} = this.state;\r\n\r\n    return (\r\n      <>\r\n        <DataContext.Provider value={contextValue}>\r\n        \r\n          <StartScreen\r\n            isVisible={!quizStarted}\r\n            startingOver={startingOver}\r\n            isLoading={loading}\r\n            onStart={this.handleStart} />\r\n\r\n          <QuizScreen\r\n            isVisible={quizStarted && questionNumber < questions.length}\r\n            q={questionNumber} />\r\n\r\n          <Overlay\r\n            isVisible={questionNumber < questions.length && selectedAnswer}\r\n            onClose={this.handleClose} />\r\n\r\n          <ResultScreen\r\n            isVisible={quizStarted && questionNumber >= questions.length}\r\n            onPlayAgain={this.handlePlayAgain} />\r\n\r\n        </DataContext.Provider>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.sass';\r\nimport App from './App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.register();"],"sourceRoot":""}